{"version":3,"sources":["component/Navbar.js","component/Dropdown.js","component/TextForm.js","component/Form.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","tittle","type","id","to","oh","onClick","togglemode","role","htmlfor","then","Dropdown","useState","color","backgroundColor","mystyle","setmystyle","btn","setbtn","style","drop1","drop2","drop3","TextForm","text","setText","heading","value","onChange","event","console","log","target","row","newtext","toUpperCase","toLowerCase","navigator","clipboard","write","alert","split","length","Form","for","placeholder","selected","PropTy","PropTypes","string","isRequireds","defaultProps","App","setmode","setthen","setoh","document","body","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.1a87f79c.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {\r\n \r\n  Link\r\n} from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        \r\n<nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n  <div className=\"container-fluid\">\r\n    <a className=\"navbar-brand\" href=\"/\">{props.tittle}</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <Link id=\"d\" className=\"nav-a active\" aria-current=\"page\" to=\"/home\">Home</Link>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <Link className=\"nav-a\" to=\"/about\">About</Link>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <Link className=\"nav-a\" to=\"/contactus\">Contact Us</Link>\r\n        </li>\r\n        \r\n       \r\n      </ul>\r\n      {/* <form className=\"d-flex\">\r\n        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n        <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n      </form> */}\r\n      <div className={`form-check form-switch text-${props.oh}`}>\r\n  <input className=\"form-check-input\" onClick={props.togglemode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n<label className=\"form-check-label\"  htmlfor=\"flexSwitchCheckDefault\">{props.then}</label>\r\n</div>\r\n    </div>\r\n  </div>\r\n</nav>\r\n        \r\n    )\r\n}\r\nNavbar.PropTy = {tittle:PropTypes.string.isRequireds,}\r\nNavbar.defaultProps ={\r\n    tittle:'OUR APP'\r\n}","import React,{useState} from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nexport default function Dropdown(props) {\r\n\r\n  const tooglestle=()=>{\r\n\r\n    if (mystyle.backgroundColor===\"white\") {\r\n      setmystyle({\r\n        color:'red',\r\n        backgroundColor:'dark'\r\n        \r\n      })\r\n      setbtn(\"Enable light Mode\");\r\n      \r\n    }else{\r\n      setmystyle({\r\n        color:'blue',\r\n        backgroundColor:'white'\r\n      })\r\n      setbtn(\"Enable dark Mode\");\r\n\r\n    }\r\n  }\r\n  \r\n  const[mystyle,setmystyle]=useState({\r\n    color:'blue',\r\n    backgroundColor:'white',\r\n  })\r\n  const[btn,setbtn]=useState(\"Enable Dark Mode\");\r\n    return (\r\n        <div className=\"my-4\" style={mystyle}>\r\n          <h1 className =\"my-2\">About Us</h1>\r\n\r\n              <div className=\"accordion my-3\" id=\"accordionPanelsStayOpenExample\">\r\n    <div className=\"accordion-item\">\r\n      <h2 className=\"accordion-header\" id=\"panelsStayOpen-headingOne\">\r\n        <button className=\"accordion-button\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#panelsStayOpen-collapseOne\" aria-expanded=\"true\" aria-controls=\"panelsStayOpen-collapseOne\" style={mystyle}>\r\n          {props.drop1}\r\n        </button>\r\n      </h2>\r\n      <div id=\"panelsStayOpen-collapseOne\" className=\"accordion-collapse collapse show\" aria-labelledby=\"panelsStayOpen-headingOne\">\r\n        <div className=\"accordion-body\">\r\n          <strong>This is the first item's accordion body.</strong> It is shown by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div className=\"accordion-item\">\r\n      <h2 className=\"accordion-header\" id=\"panelsStayOpen-headingTwo\">\r\n        <button className=\"accordion-button collapsed\" style={mystyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#panelsStayOpen-collapseTwo\" aria-expanded=\"false\" aria-controls=\"panelsStayOpen-collapseTwo\">\r\n          {props.drop2}\r\n        </button>\r\n      </h2>\r\n      <div id=\"panelsStayOpen-collapseTwo\" className=\"accordion-collapse collapse\" aria-labelledby=\"panelsStayOpen-headingTwo\">\r\n        <div className=\"accordion-body\">\r\n          <strong>This is the second item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div className=\"accordion-item\">\r\n      <h2 className=\"accordion-header\" id=\"panelsStayOpen-headingThree\">\r\n        <button className=\"accordion-button collapsed\" style={mystyle} type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#panelsStayOpen-collapseThree\" aria-expanded=\"false\" aria-controls=\"panelsStayOpen-collapseThree\">\r\n          {props.drop3}\r\n        </button>\r\n      </h2>\r\n      <div id=\"panelsStayOpen-collapseThree\" className=\"accordion-collapse collapse\" aria-labelledby=\"panelsStayOpen-headingThree\">\r\n        <div className=\"accordion-body\">\r\n          <strong>This is the third item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n<button type=\"button\"  className=\"btn btn-success my-3\" onClick={tooglestle}>{btn}</button>\r\n        </div>\r\n    )\r\n}\r\nDropdown.PropTy = {drop1:PropTypes.string,}\r\nDropdown.defaultProps = {drop1:'Your DropDown 1',\r\n                        drop2:\"Your Drop Down 2\",\r\n                        drop3:\"Your Drop Down 3\"\r\n\r\n}\r\n","import React,{useState} from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport default function TextForm(props) {\r\n  const handleUperclick=()=>{\r\nconsole.log(\"Uppercase Was Clicked\"+text);\r\nlet newtext = text.toUpperCase();\r\n\r\n setText(newtext);\r\n  }\r\n  const handlelowerclick=()=>{\r\n    console.log(\"Uppercase Was Clicked\"+text);\r\n    let newtext = text.toLowerCase();\r\n    \r\n     setText(newtext);\r\n      }\r\n      const handleclearclick=()=>{\r\n        console.log(\"Uppercase Was Clicked\"+text);\r\n        let newtext ='';\r\n        \r\n         setText(newtext);\r\n          }\r\n          const copy=()=>{\r\n           // console.log(\"Uppercase Was Clicked\"+text);\r\n          //  let newtext ='';\r\n            navigator.clipboard.write(text);\r\n            alert(\"Coped to Clipboard\"+text);\r\n            \r\n            // setText(newtext);\r\n              }\r\n  let handleonchange=(event)=>{\r\n    console.log(\"On Change\");\r\n    setText(event.target.value);\r\n      }\r\n  const [text, setText] = useState('');\r\n    return (\r\n      <>\r\n        <div>\r\n            <h1>{props.heading}</h1>\r\n            \r\n  \r\n    <label  className=\"form-label\">Enter your Pargraph here</label>\r\n    <textarea   className=\"form-control\" value={text}  onChange={handleonchange} id=\"exampleInputEmail1\" row=\"10\"/>\r\n  <button   className=\"btn btn-warning mx-2\" onClick={handleUperclick}>Convert To Uppercase</button>\r\n  <button   className=\"btn btn-danger mx-2\" onClick={handlelowerclick}>Convert To LowerCase</button>\r\n  <button   className=\"btn btn-danger mx-2\" onClick={handleclearclick}>CLEAR Text </button>\r\n  <button   className=\"btn btn-danger mx-2\" onClick={copy}>Copy Text </button>\r\n\r\n</div>\r\n<div className=\"container\">\r\n  <h1>Your Text Here </h1>\r\n  <p>{text.split(\" \").length} words and {text.length} charcater </p>\r\n  <p>{0.008*text.split(\" \").length} Minutes Read</p>\r\n  <h2>Preview</h2>\r\n  <p>{text}</p>\r\n\r\n</div>\r\n</>\r\n    )\r\n}\r\nTextForm.PropTy = {heading:PropTypes.string,};","import React from 'react'\r\n\r\nexport default function Form(props) {\r\n    return (\r\n        <div>\r\n            <h1 >{props.heading}</h1>\r\n            <form className=\"row g-3\">\r\n  <div className=\"col-md-6\">\r\n    <label for=\"inputEmail4\" className=\"form-label\">Email</label>\r\n    <input type=\"email\" className=\"form-control\" id=\"inputEmail4\"/>\r\n  </div>\r\n  <div className=\"col-md-6\">\r\n    <label for=\"inputPassword4\" className=\"form-label\">Password</label>\r\n    <input type=\"password\" className=\"form-control\" id=\"inputPassword4\"/>\r\n  </div>\r\n  <div className=\"col-12\">\r\n    <label for=\"inputAddress\" className=\"form-label\">Address</label>\r\n    <input type=\"text\" className=\"form-control\" id=\"inputAddress\" placeholder=\"1234 Main St\"/>\r\n  </div>\r\n  <div className=\"col-12\">\r\n    <label for=\"inputAddress2\" className=\"form-label\">Address 2</label>\r\n    <input type=\"text\" className=\"form-control\" id=\"inputAddress2\" placeholder=\"Apartment, studio, or floor\"/>\r\n  </div>\r\n  <div className=\"col-md-6\">\r\n    <label for=\"inputCity\" className=\"form-label\">City</label>\r\n    <input type=\"text\" className=\"form-control\" id=\"inputCity\"/>\r\n  </div>\r\n  <div className=\"col-md-4\">\r\n    <label for=\"inputState\" className=\"form-label\">State</label>\r\n    <select id=\"inputState\" className=\"form-select\">\r\n      <option selected>Choose...</option>\r\n      <option>...</option>\r\n    </select>\r\n  </div>\r\n  <div className=\"col-md-2\">\r\n    <label for=\"inputZip\" className=\"form-label\">Zip</label>\r\n    <input type=\"text\" className=\"form-control\" id=\"inputZip\"/>\r\n  </div>\r\n  <div className=\"col-12\">\r\n    <div className=\"form-check\">\r\n      <input className=\"form-check-input\" type=\"checkbox\" id=\"gridCheck\"/>\r\n      <label className=\"form-check-label\" for=\"gridCheck\">\r\n        Check me out\r\n      </label>\r\n    </div>\r\n  </div>\r\n  <div className=\"col-12\">\r\n    <button id=\"my\" type=\"submit\" className=\"btn btn-primary\">Sign in</button>\r\n  </div>\r\n</form>\r\n        </div>\r\n    )\r\n}\r\n","import './App.css';\nimport Navbar from './component/Navbar';\nimport Dropdown from './component/Dropdown';\nimport TextForm from './component/TextForm';\n import Form from './component/Form'\nimport React,{useState} from \"react\";\nimport {\n  BrowserRouter as Router,\n  \n  Routes ,\n  Route\n  \n} from \"react-router-dom\";\nfunction App() {\n  const  [mode,setmode]=useState('light');\n  const [then,setthen]=useState('Enable Dark Mode')\nconst [oh,setoh]=useState('dark')\n  const togglemode=()=>{\n    if (mode==='light') {\n      setmode('dark');\n      setthen('Enable  Light Mode');\n      setoh('light');\n      document.body.style.backgroundColor='#adb5bd';\n    }else{\n      setmode('light');\n      setthen('Enable  Dark Mode');\n      setoh('dark');\n      document.body.style.backgroundColor='white';\n\n    }\n  }\n  return (\n <Router> \n  <div>\n  \n  <Navbar mode={mode} togglemode={togglemode} then={then} oh={oh}/>\n  \n   <Routes>\n  \n     <Route path=\"/about\" element={<Dropdown/>} />\n      <Route path=\"/contactus\" element={<TextForm/>} />\n<Route path=\"/home\" element={<Form/>} />\n      </Routes>  \n    \n   \n  </div>\n </Router>\n    );\n    \n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}